Planning Poker
================================

A Django app which allows teams to perform a remote planning poker session

Quickstart
----------

Clone repo::

    $ git clone git@gitlab.intern.rheinwerk.de:rheinwerk/planning-poker
    $ cd planning-poker

Install tox, either system-wide via your distribution's package manager,
e.g. on debian/Ubuntu with::

    $ sudo apt-get install python-tox

... or create a virtualenv and install tox into it::

    $ mkvirtualenv planning-poker
    (planning-poker)$ pip install tox

Run the tests with the default Python version::

    $ py.test -v tests/

or::

    $ make test

Run the tests via tox for all Python versions configured in ``tox.ini``::

    $ tox

To see all available make target just run ``make`` without arguments.

Code Quality Assurance
----------------------

The included Makefile is set up to run several Python static code
checking and reporting tools. To print a list of available Makefile
targets and the tools they run, simple run::

    $ make

Unless noted otherwise, these targets run all tools directly, i.e.
without tox, which means they need to be installed in your Python
environment, preferably in a project-specific virtual environment.
To create a virtual environment with Python 3 (you may have to
install the package ``python3-virtualenv`` first) run::

    $ python3 -m venv planning-poker

Or with Python 2 (you may have to install the packages ``virtualenv``
and ``virtualenvwrapper``) run::

    $ mkvirtualenv planning-poker --python=python3.5

and to install all supported tools and their dependencies run::

    (planning-poker)$ pip install -r requirements/dev.txt

Then run the Makefile target of your choice, e.g.::

    $ make flake8

Documentation
-------------

Package documentation is generated by Sphinx. The documentation can be build
with::

    $ make docs

After a successful build the documentation index is opened in your web browser.
You can override the command to open the browser (default ``xdg-open``) with
the ``BROWSER`` make variable, e.g.::

    $ make BROWSER=chromium-browser docs
